<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<context:component-scan base-package="com.spring.student.service"></context:component-scan>	
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- <context:component-scan base-package="com.spring.service"/> -->
	<!-- 프로젝트 시작 시 필요한 객체를 미리 만듦 bean으로 객체를 만듬 밑에꺼는 다 디비작업을 위한 객체  -->
	
   <!-- 디비와연결 -->
  <!--  BasicDataSource basicDataSource = new BasicDataSource(); 클래스 이름가지고 객체생성해준다-->
   <bean id="dataSourceSpied" class="org.apache.commons.dbcp.BasicDataSource">
      <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>
      <property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"></property>
      <property name="username" value="MyDB"></property>
      <property name="password" value="ORACLE"></property>
   </bean>	
   
   <bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
       <constructor-arg ref="dataSourceSpied" />
       <property name="logFormatter">
           <bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
               <property name="loggingType" value="MULTI_LINE" />
               <property name="sqlPrefix" value="SQL:::" />
           </bean>
       </property>
   </bean>
   <!-- 이클립스에서는 서비스임플에서 객체만들어 썻었다. Spring에선 그럴필요 없이 여기서 만들어 준다.  -->
  <!--  SqlSessionFactoryBean sqlSessionFactoryBean = new SqlSessionFactoryBean(); -->
   <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
      <property name="configLocation" value="classpath:sql-map-config.xml"></property>
      <property name="dataSource" ref="dataSource"></property>
   </bean>
   <!-- 평소에쓰던 sqlSession객체. 두번째줄꺼 -->
   <bean class="org.mybatis.spring.SqlSessionTemplate">
      <constructor-arg ref="sqlSessionFactory"></constructor-arg>
   </bean>
   
   <!-- 객체한번 만들어 보자  --> 
   <!-- <bean id="memberService" class="com.kh.board.service.MemberServiceImpl"></bean> --> <!-- class="패키지명.클래스명" -->
	
	<!-- component-scan을 통해 미리지정된 패키지 내의 클래스를 읽는 이유 -->
	<!-- - 해당 패키지 내에서 객체 생성이 필요한 클래스의 객체를 생성하기 위해. -->
	
</beans>
